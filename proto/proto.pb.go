// Code generated by protoc-gen-go.
// source: proto.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto.proto

It has these top-level messages:
	Empty
	PingResponse
	ToDo
	ListRequest
	ListResponse
	GetRequest
	DeleteRequest
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ToDo struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Done    bool   `protobuf:"varint,3,opt,name=done" json:"done,omitempty"`
}

func (m *ToDo) Reset()                    { *m = ToDo{} }
func (m *ToDo) String() string            { return proto1.CompactTextString(m) }
func (*ToDo) ProtoMessage()               {}
func (*ToDo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ListRequest struct {
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListResponse struct {
	Todos []*ToDo `protobuf:"bytes,1,rep,name=todos" json:"todos,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListResponse) GetTodos() []*ToDo {
	if m != nil {
		return m.Todos
	}
	return nil
}

type GetRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto1.RegisterType((*Empty)(nil), "Empty")
	proto1.RegisterType((*PingResponse)(nil), "PingResponse")
	proto1.RegisterType((*ToDo)(nil), "ToDo")
	proto1.RegisterType((*ListRequest)(nil), "ListRequest")
	proto1.RegisterType((*ListResponse)(nil), "ListResponse")
	proto1.RegisterType((*GetRequest)(nil), "GetRequest")
	proto1.RegisterType((*DeleteRequest)(nil), "DeleteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ToDoService service

type ToDoServiceClient interface {
	Ping(ctx context.Context, in *Empty, opts ...client.CallOption) (*PingResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*ToDo, error)
	Add(ctx context.Context, in *ToDo, opts ...client.CallOption) (*ToDo, error)
	Update(ctx context.Context, in *ToDo, opts ...client.CallOption) (*ToDo, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*Empty, error)
}

type toDoServiceClient struct {
	c           client.Client
	serviceName string
}

func NewToDoServiceClient(serviceName string, c client.Client) ToDoServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "todoservice"
	}
	return &toDoServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *toDoServiceClient) Ping(ctx context.Context, in *Empty, opts ...client.CallOption) (*PingResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ToDoService.Ping", in)
	out := new(PingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ToDoService.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*ToDo, error) {
	req := c.c.NewRequest(c.serviceName, "ToDoService.Get", in)
	out := new(ToDo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Add(ctx context.Context, in *ToDo, opts ...client.CallOption) (*ToDo, error) {
	req := c.c.NewRequest(c.serviceName, "ToDoService.Add", in)
	out := new(ToDo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Update(ctx context.Context, in *ToDo, opts ...client.CallOption) (*ToDo, error) {
	req := c.c.NewRequest(c.serviceName, "ToDoService.Update", in)
	out := new(ToDo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*Empty, error) {
	req := c.c.NewRequest(c.serviceName, "ToDoService.Delete", in)
	out := new(Empty)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ToDoService service

type ToDoServiceHandler interface {
	Ping(context.Context, *Empty, *PingResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
	Get(context.Context, *GetRequest, *ToDo) error
	Add(context.Context, *ToDo, *ToDo) error
	Update(context.Context, *ToDo, *ToDo) error
	Delete(context.Context, *DeleteRequest, *Empty) error
}

func RegisterToDoServiceHandler(s server.Server, hdlr ToDoServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ToDoService{hdlr}, opts...))
}

type ToDoService struct {
	ToDoServiceHandler
}

func (h *ToDoService) Ping(ctx context.Context, in *Empty, out *PingResponse) error {
	return h.ToDoServiceHandler.Ping(ctx, in, out)
}

func (h *ToDoService) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.ToDoServiceHandler.List(ctx, in, out)
}

func (h *ToDoService) Get(ctx context.Context, in *GetRequest, out *ToDo) error {
	return h.ToDoServiceHandler.Get(ctx, in, out)
}

func (h *ToDoService) Add(ctx context.Context, in *ToDo, out *ToDo) error {
	return h.ToDoServiceHandler.Add(ctx, in, out)
}

func (h *ToDoService) Update(ctx context.Context, in *ToDo, out *ToDo) error {
	return h.ToDoServiceHandler.Update(ctx, in, out)
}

func (h *ToDoService) Delete(ctx context.Context, in *DeleteRequest, out *Empty) error {
	return h.ToDoServiceHandler.Delete(ctx, in, out)
}

func init() { proto1.RegisterFile("proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0xc7, 0x93, 0xe6, 0xa5, 0xcf, 0x33, 0x69, 0x7b, 0x18, 0x14, 0x42, 0x2a, 0xb4, 0x0c, 0x08,
	0x01, 0x61, 0x0f, 0xf5, 0xe0, 0x59, 0xa8, 0xf4, 0xe2, 0x41, 0x56, 0xfd, 0x00, 0xb5, 0x3b, 0x94,
	0x80, 0xcd, 0xc6, 0xee, 0x56, 0xf0, 0x13, 0xfa, 0xb5, 0x24, 0xbb, 0xad, 0x4d, 0x15, 0x2f, 0xcb,
	0xbc, 0xec, 0x7f, 0xf6, 0x37, 0xff, 0x85, 0xac, 0xd9, 0x6a, 0xab, 0x85, 0x3b, 0xa9, 0x0f, 0xc9,
	0xdd, 0xa6, 0xb1, 0x1f, 0x54, 0xc2, 0xe0, 0xa1, 0xaa, 0xd7, 0x92, 0x4d, 0xa3, 0x6b, 0xc3, 0x98,
	0x43, 0x7f, 0xc3, 0xc6, 0x2c, 0xd7, 0x9c, 0x87, 0xd3, 0xb0, 0xfc, 0x2f, 0x0f, 0x29, 0xcd, 0x21,
	0x7e, 0xd2, 0x73, 0x8d, 0x23, 0xe8, 0x55, 0xca, 0x35, 0x23, 0xd9, 0xab, 0x54, 0x57, 0xd1, 0x3b,
	0x51, 0x20, 0x42, 0xac, 0x74, 0xcd, 0x79, 0x34, 0x0d, 0xcb, 0x7f, 0xd2, 0xc5, 0x74, 0x03, 0xd9,
	0x7d, 0x65, 0xac, 0xe4, 0xb7, 0x1d, 0x1b, 0x8b, 0x67, 0x90, 0xac, 0xf4, 0xae, 0xb6, 0x6e, 0x5e,
	0x22, 0x7d, 0xd2, 0x0a, 0x9b, 0xc3, 0xbc, 0x44, 0xba, 0x98, 0xae, 0x60, 0xe0, 0x85, 0x7b, 0xd0,
	0x31, 0x24, 0x56, 0x2b, 0x6d, 0xf2, 0x70, 0x1a, 0x95, 0xd9, 0x2c, 0x11, 0x2d, 0x9c, 0xf4, 0x35,
	0xba, 0x00, 0x58, 0xf0, 0xf7, 0x23, 0x3f, 0x88, 0x69, 0x02, 0xc3, 0x39, 0xbf, 0xb2, 0xe5, 0x3f,
	0x2e, 0xcc, 0x3e, 0x43, 0xc8, 0xda, 0x71, 0x8f, 0xbc, 0x7d, 0xaf, 0x56, 0x8c, 0x13, 0x88, 0x5b,
	0x93, 0x30, 0x15, 0xce, 0xb4, 0x62, 0x28, 0xba, 0x9e, 0x51, 0x80, 0x97, 0x10, 0xb7, 0x70, 0x38,
	0x10, 0x9d, 0xe5, 0x8a, 0xa1, 0xe8, 0x12, 0x53, 0x80, 0x63, 0x88, 0x16, 0x6c, 0x31, 0x13, 0x47,
	0xb8, 0xc2, 0x83, 0x53, 0x80, 0xe7, 0x10, 0xdd, 0x2a, 0x85, 0x3e, 0x3f, 0x96, 0x73, 0x48, 0x9f,
	0x1b, 0xb5, 0xb4, 0xfc, 0xab, 0x43, 0x90, 0xfa, 0x35, 0x70, 0x24, 0x4e, 0xf6, 0x29, 0xf6, 0x9c,
	0x14, 0xbc, 0xa4, 0xee, 0xbb, 0xaf, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x3e, 0xb7, 0x0b,
	0xfd, 0x01, 0x00, 0x00,
}
